@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Phorcys2Web.Controllers

@{
	ViewData["Title"] = "Dives";
}
@model IEnumerable<Phorcys.Web.Models.DiveViewModel>

<section class="jumbotron text-center">
	<div class="container">
		<h1 class="jumbotron-heading">@ViewBag.Title</h1>
	</div>
</section>

<div class="placeholders mb-2">
	<div class="row d-flex justify-content-start">
	</div>
</div>
<p>
	@*Html.ActionLink("Enter New Dive", "Create", "Dive")*@
	<form action="@Url.Action("Create", "Dive")" method="get">
		<button type="submit" class="btn btn-primary">Enter New Dive</button>
	</form>
</p>

<div class="row">
	<div class="col-12">
		@(
				Html.Kendo().Grid(Model)
				.Name("Grid")
				.Columns(columns =>
				{
					columns.Bound(p => p.DiveId).Hidden(true);
					columns.Bound(p => p.DiveNumber).Title("Dive #");
					columns.Bound(p => p.DivePlanTitle);
					columns.Bound(p => p.DiveSite);
					columns.Bound(p => p.DescentTime).Format("{0:MM/dd/yyyy hh:mm tt}");
					columns.Bound(p => p.Minutes);
					columns.Bound(p => p.MaxDepth).Width(50);
					columns.Command(command => command.Custom("Delete").Click("onDelete"));
					//columns.Bound(p => p)
					//.ClientTemplate("<button onclick='deleteDive()' class='k-button k-primary'><img src='icons/TrashCan.png' />Delete</button>");
					//columns.Command(command => { command.Destroy(); });
					//columns.Command(command => { command.Edit(); command.Destroy(); }).Width(250);
				})
				//.DataSource(dataSource => dataSource
				//.Ajax()
				//.Read(read => read.Action("Read", "Dive")) // Assuming you have a Read action for fetching data
				//.Destroy(destroy => destroy.Action("Delete", "Dive"))) // Pointing to the Delete action in DiveController
				.Height(500)
				.Mobile()
				.Resizable(resize => resize.Columns(true)
				)
				.ToolBar(toolbar =>
				{
					toolbar.Excel();
					toolbar.Pdf();
					toolbar.Search();
				})
				.Pdf(pdf => pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
				.Excel(excel => excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
				.ColumnMenu(col => col.Filterable(true))
				.Pageable(pageable => pageable
				.ButtonCount(5)
				.Refresh(true)
				.PageSizes(new[] { 5, 10, 20, 40 }))
				.Sortable()
				//.Scrollable()
				.Groupable()
				.Filterable()
				.HtmlAttributes(new { style = "height:550px;" })
				)
	</div>
</div>


<script>
	function onDelete(e) {
		e.preventDefault(); // Prevent the grid's default delete action
		var tr = $(e.target).closest("tr"); // Get the row for the button
		var data = this.dataItem(tr); // Get the row data

		var diveId = data.DiveId; // Assuming your model has a DiveId property

		if (confirm("Are you sure you want to delete this dive? " + diveId)) {
			// Create a form and submit it
			var form = $('<form action="@Url.Action("Delete", "Dive")" method="post"></form>');
			form.append('<input type="hidden" name="DiveId" value="' + diveId + '" />');
			form.appendTo('body').submit();
		}
	}

	function deleteDive() {
		Alert("Test");
	}
</script>

